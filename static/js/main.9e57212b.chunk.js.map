{"version":3,"sources":["components/Navbar.js","Queries.js","components/PlanetCard.js","components/Planets.js","components/PeopleCard.js","components/People.js","App.js","index.js"],"names":["Navbar","setPage","onClick","fetchPlanets","key","page","a","fetch","res","json","fetchPeople","PlanetCard","planet","className","name","population","terrain","Planets","useState","usePaginatedQuery","staleTime","resolvedData","latestData","status","results","map","ele","index","old","Math","max","disabled","next","PeopleCard","people","gender","birth_year","People","useQuery","data","App","initialIsOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAWeA,EATA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACI,6BACI,4BAAQC,QAAS,kBAAMD,EAAQ,YAA/B,UACA,4BAAQC,QAAS,kBAAMD,EAAQ,aAA/B,a,+BCNCE,EAAY,uCAAG,WAAMC,EAAKC,GAAX,eAAAC,EAAA,sEACNC,MAAM,uCAAD,OAAwCF,IADvC,cAClBG,EADkB,yBAEjBA,EAAIC,QAFa,2CAAH,wDAKZC,EAAW,uCAAG,4BAAAJ,EAAA,sEACLC,MAAM,iCADD,cACjBC,EADiB,yBAEhBA,EAAIC,QAFY,2CAAH,qDCHXE,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,OACI,yBAAKC,UAAU,QACX,4BAAMD,EAAOE,MACb,2CAAkBF,EAAOG,YACzB,wCAAeH,EAAOI,WC0CnBC,EA5CC,WAAO,IAAD,EACMC,mBAAS,GADf,mBACXb,EADW,KACLJ,EADK,OAMdkB,YAAkB,CAAC,UAAWd,GAAOF,EAAc,CACnDiB,UAAW,MAJXC,EAHc,EAGdA,aACAC,EAJc,EAIdA,WACAC,EALc,EAKdA,OAKJ,OACI,6BACI,uCAEY,YAAXA,GACG,6CAGQ,UAAXA,GACG,oDAGQ,YAAXA,GACG,oCACA,6BACKF,EAAaG,QAAQC,KAAI,SAACC,EAAKC,GAAN,OACtB,kBAAC,EAAD,CAAYvB,IAAKuB,EAAOf,OAAQc,QAGpC,4BACIxB,QAAS,kBAAKD,GAAQ,SAAA2B,GAAG,OAAIC,KAAKC,IAAIF,EAAK,EAAG,OAC9CG,SAAmB,IAAT1B,GAFd,aAIA,8BAAQA,GACR,4BACIH,QAAS,kBAAKD,GAAQ,SAAA2B,GAAG,OAAKN,GAAeA,EAAWU,KAAaJ,EAAM,EAAZA,MAC/DG,UAAWT,IAAeA,EAAWU,MAFzC,gB,QCrCPC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,OACI,yBAAKrB,UAAU,QACX,4BAAMqB,EAAOpB,MACb,uCAAcoB,EAAOC,QACrB,2CAAkBD,EAAOE,cCyBtBC,EA3BA,WAAO,IAAD,EACMC,YAAS,SAAU5B,EAAa,CACnDU,UAAW,MADRmB,EADU,EACVA,KAAMhB,EADI,EACJA,OAIb,OACI,6BACI,sCACY,YAAXA,GACG,6CAGQ,UAAXA,GACG,oDAGQ,YAAXA,GACG,6BACKgB,EAAKf,QAAQC,KAAI,SAACC,EAAKC,GAAN,OACd,kBAAC,EAAD,CAAYvB,IAAKuB,EAAOO,OAAQR,U,QCDzCc,MAjBf,WAAgB,IAAD,EACatB,mBAAS,WADtB,mBACJb,EADI,KACEJ,EADF,KAGX,OACI,oCACI,yBAAKY,UAAU,OACX,wDACA,kBAAC,EAAD,CAAQZ,QAASA,IACjB,yBAAKY,UAAU,WACD,YAATR,EAAqB,kBAAC,EAAD,MAAa,kBAAC,EAAD,QAG3C,kBAAC,qBAAD,CAAoBoC,eAAe,MCb/CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9e57212b.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Navbar = ({ setPage }) => {\r\n    return (\r\n        <nav>\r\n            <button onClick={() => setPage(\"People\")}>People</button>\r\n            <button onClick={() => setPage(\"Planets\")}>Planets</button>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","export const fetchPlanets = async(key, page) => {\r\n    const res = await fetch(`https://swapi.dev/api/planets/?page=${page}`);\r\n    return res.json(); //gets the data - returns a promise\r\n};\r\n\r\nexport const fetchPeople = async() => {\r\n    const res = await fetch(`https://swapi.dev/api/people/`);\r\n    return res.json(); //gets the data - returns a promise\r\n};","import React from \"react\"\r\n\r\nexport const PlanetCard = ({ planet }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>{ planet.name}</h3>\r\n            <p>Population - { planet.population }</p>\r\n            <p>Terrain - { planet.terrain }</p>\r\n        </div>\r\n    );\r\n};","import React, { useState } from \"react\"\r\nimport { usePaginatedQuery } from \"react-query\";\r\nimport { fetchPlanets } from \"../Queries\";\r\nimport { PlanetCard } from \"./PlanetCard\";\r\n\r\nconst Planets = () => {\r\n    const [page, setPage] = useState(1);\r\n    const {\r\n        resolvedData,  //last successfully fetched data - is output\r\n        latestData,  //data for ongoing queries, not cached. Sets resolvedData when ready.\r\n        status\r\n    } = usePaginatedQuery([\"planets\", page], fetchPlanets, {\r\n        staleTime: 5000 //dont refetch for 5 seconds\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h2>Planets</h2>\r\n\r\n            {status === 'loading' && (\r\n                <div>Loading data</div>\r\n            )}\r\n\r\n            {status === 'error' && (\r\n                <div>Error fetching data</div>\r\n            )}\r\n\r\n            {status === 'success' && (\r\n                <>\r\n                <div>\r\n                    {resolvedData.results.map((ele, index) =>\r\n                        <PlanetCard key={index} planet={ele} />\r\n                    )}\r\n                </div>\r\n                    <button\r\n                        onClick={()=> setPage(old => Math.max(old -1, 1))}\r\n                        disabled={page === 1}\r\n                    >Prev Page</button>\r\n                    <span>{ page }</span>\r\n                    <button\r\n                        onClick={()=> setPage(old => !latestData || !latestData.next ? old : old + 1)}\r\n                        disabled={!latestData || !latestData.next}\r\n                    >Next Page</button>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Planets;","import React from \"react\"\r\n\r\nexport const PeopleCard = ({ people }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>{ people.name}</h3>\r\n            <p>Gender - { people.gender }</p>\r\n            <p>Birth Year - { people.birth_year }</p>\r\n        </div>\r\n    );\r\n};","import React from \"react\"\r\nimport {useQuery} from \"react-query\";\r\nimport { fetchPeople } from \"../Queries\";\r\nimport { PeopleCard } from \"./PeopleCard\";\r\n\r\nconst People = () => {\r\n    const {data, status} = useQuery(\"people\", fetchPeople, {\r\n        staleTime: 5000 //dont refetch for 5 seconds\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h2>People</h2>\r\n            {status === 'loading' && (\r\n                <div>Loading data</div>\r\n            )}\r\n\r\n            {status === 'error' && (\r\n                <div>Error fetching data</div>\r\n            )}\r\n\r\n            {status === 'success' && (\r\n                <div>\r\n                    {data.results.map((ele, index) =>\r\n                        <PeopleCard key={index} people={ele} />\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default People;","import React, {useState} from 'react';\r\nimport Navbar from \"./components/Navbar\";\r\nimport Planets from \"./components/Planets\";\r\nimport People from \"./components/People\";\r\nimport {ReactQueryDevtools} from 'react-query-devtools';\r\n\r\nfunction App() {\r\n    const [page, setPage] = useState(\"Planets\");\r\n\r\n    return (\r\n        <>\r\n            <div className=\"App\">\r\n                <h1>RESTstar - Star Wars API</h1>\r\n                <Navbar setPage={setPage}/>\r\n                <div className=\"Content\">\r\n                    {page === \"Planets\" ? <Planets/> : <People/>}\r\n                </div>\r\n            </div>\r\n            <ReactQueryDevtools initialIsOpen={false}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}